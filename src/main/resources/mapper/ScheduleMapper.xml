<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.y4j.final_project.schedule.service.ScheduleMapper">
	
	<insert id="regist" parameterType="ScheduleVO">
		insert into schedule(schedule_start_time,
							 schedule_end_time,
							 schedule_writer,
							 schedule_type,
							 schedule_ent_name,
							 schedule_location,
							 schedule_content)
    	values(#{schedule_start_time},
    		   #{schedule_end_time},
    		   #{schedule_writer},
    		   #{schedule_type},
    		   #{schedule_ent_name},
    		   #{schedule_location},
    		   #{schedule_content})
	</insert>
	<!-- schedule_no 받아서 맵핑테이블 insert -->
	<insert id="registMap">
		<selectKey keyProperty="schedule_no" order="BEFORE" resultType="int">
			select LAST_INSERT_ID() as schedule_no
		</selectKey>
		
		insert into entertainer_schedule (ent_name,
										  schedule_no)
		values(#{ent_name},
			   #{schedule_no})
	</insert>
	
	<!-- 그룹, 이름  -->
	<select id="getEntType" resultType="EntertainerVO">
		select DISTINCT(ent_group_name) from entertainer where ent_type = #{ent_type}
	</select>
	<select id="getEntType2" resultType="EntertainerVO">
		select ent_name from entertainer where ent_type = #{ent_type}
	</select>
	
	<!-- 아티스트-스케줄 유무 -->
	<select id="getSchedule" resultType="ScheduleVO">
		select s.schedule_start_time, s.schedule_end_time, es.ent_name from `schedule` s 
		left join entertainer_schedule es
			on s.schedule_no = es.schedule_no
		where ent_name = #{artistSelect}
	</select>
	
	<!-- 권한 user 설정 안함 -->
	<!-- 일정 전체 개수 -->
	<select id="getScheduleTotal" resultType="int">
		select count(*) as total from `schedule` s left join entertainer_schedule es on es.schedule_no = s.schedule_no
		<where>
			<if test="searchContent != null and searchContent != ''">
			     and schedule_ent_name like concat('%', #{searchContent}, '%')
			</if>
			<if test="searchName != null and searchName != ''">
				and es.ent_name = #{searchName}
			</if>
			<if test="startDate != null and startDate != ''">
				and date(#{startDate}) between date(schedule_start_time) and date(schedule_end_time)
			</if>
		</where>
	</select>
	
	<!-- 오늘 일정 개수 -->
	<select id="getTodayScheduleCnt" resultType="int">
		select count(*) as todayCnt
		from schedule
		where date(now())
			between date(schedule_start_time)
			and date(schedule_end_time)
	</select>
	
	<!-- 일정 리스트 -->
	<select id="getList" resultType="ScheduleVO">
		select s.schedule_no,
			   s.schedule_start_time,
			   s.schedule_end_time,
			   s.schedule_writer,
			   s.schedule_type,
			   s.schedule_ent_name,
			   s.schedule_location,
			   es.ent_name
		from `schedule` s
		left join entertainer_schedule es
			on es.schedule_no = s.schedule_no
		left join entertainer e
			on es.ent_name = e.ent_name
		<where>
			<!-- 제목 검색 -->
			<if test="searchContent != null and searchContent != ''">
			    and s.schedule_ent_name like concat('%', #{searchContent}, '%')
			</if>
			<!-- 이미지 검색 -->
			<if test="searchName != null and searchName != ''">
				and es.ent_name = #{searchName}
			</if>
			<!-- 날짜 검색 -->
			<if test="startDate != null and startDate != ''">
				and date(#{startDate}) between date(schedule_start_time) and date(schedule_end_time)
			</if>
		</where>
		order by
		<if test="searchContent != null and searchContent != ''">
			s.schedule_start_time desc,
		</if>
		<if test="searchName != null and searchName != ''">
			s.schedule_start_time desc,
		</if>
		<if test="startDate != null and startDate != ''">
			s.schedule_start_time desc,
		</if>		
		s.schedule_start_time desc
		limit #{pageStart}, #{amount}	
	</select>
	
	<!-- 일반페이지 일정 리스트 -->
	<select id="axiosGetList" resultType="Map">
		select s.schedule_no,
			   s.schedule_start_time,
			   s.schedule_end_time,
			   s.schedule_type,
			   s.schedule_ent_name,
			   es.ent_name
		from `schedule` s
		left join entertainer_schedule es
			on es.schedule_no = s.schedule_no
		left join entertainer e
			on es.ent_name = e.ent_name
		where SUBSTR(s.schedule_start_time, 1, 10) = #{schedule_start_time}
		  and es.ent_name = #{ent_name}
		order by s.schedule_start_time asc
	</select>
	
	<!-- 일정 상세 -->
	<select id="getDetail" resultType="ScheduleVO">	
		select s.schedule_no,
			   s.schedule_start_time,
			   s.schedule_end_time,
			   s.schedule_writer,
			   s.schedule_type,
			   s.schedule_ent_name,
			   s.schedule_location,
			   s.schedule_content,
	   		   es.ent_name,
	   		   e.ent_type
		from `schedule` s
		left join entertainer_schedule es
			on es.schedule_no = s.schedule_no
		left join entertainer e
			on es.ent_name = e.ent_name
		where s.schedule_no = #{schedule_no}
		order by s.schedule_no desc
	</select>

	<!-- 일정 수정 화면 -->	
	<select id="getModifyForm" resultType="scheduleVO">
		select s.schedule_no,
			   s.schedule_start_time,
			   s.schedule_end_time,
			   s.schedule_writer,
			   s.schedule_type,
			   s.schedule_ent_name,
			   s.schedule_location,
			   s.schedule_content,
	   		   es.ent_name
		from `schedule` s
		left join entertainer_schedule es
			on es.schedule_no = s.schedule_no
		where s.schedule_no = #{schedule_no}
	</select>

	<!-- 일정 수정 기능 -->
	<update id="scheduleModify" parameterType="ScheduleVO">
		update schedule
		set schedule_start_time = #{schedule_start_time},
			schedule_end_time = #{schedule_end_time},
		    schedule_type = #{schedule_type},
		    schedule_ent_name = #{schedule_ent_name},
			schedule_location = #{schedule_location},
			schedule_content = #{schedule_content}
		where schedule_no = #{schedule_no}
	</update>
	
	<!-- 일정 삭제 -->
	<delete id="scheduleDelete">
		delete s, es
		from `schedule` as s
		left join entertainer_schedule as es
		on s.schedule_no = es.schedule_no
		where s.schedule_no = #{schedule_no}
	</delete>
	
</mapper>